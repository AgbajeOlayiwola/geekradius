/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect } from 'react'
import { useFrame } from "@react-three/fiber"
import { proxy, useSnapshot } from "valtio"
import { useGLTF, useAnimations } from '@react-three/drei'

export default function FrankincentsModel({ ...props }) {
  const snap = useSnapshot(state)

  const Sphere001 = useRef()
  const Ring001 = useRef()
  const Card = useRef()
  const Cash = useRef()

  //cash 
  // useFrame((state) => {
  //   const t = state.clock.getElapsedTime()
  //   //Cash.current.rotation.z = 3.2
  //   //  - (0 + Math.sin(t / 1.5)) /2
  // //  Cash.current.rotation.x = Math.cos(t / 2) / 2
  //  // Cash.current.rotation.y = Math.sin(t / 1) / -2
  // //  Cash.current.position.y = (0 + Math.sin(t / 1.5)) / 2
  // })

//card animation
useFrame((state) => {
  const t = state.clock.getElapsedTime()
  Card.current.rotation.z =5.7 - (2 + Math.sin(t / 1.5)) /20
//   Card.current.rotation.x = Math.cos(t / 2) / 2
//   Card.current.rotation.y = Math.sin(t / 1) / -2
  Card.current.position.y = (1 + Math.sin(t / 0.5)) / 2
})

//ring animation
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    Ring001.current.rotation.z =-3.2 - (2 + Math.sin(t / 1.5)) /20
    Ring001.current.rotation.x = Math.cos(t / 2) / 2
    Ring001.current.rotation.y = Math.sin(t / 1) / -2
   Ring001.current.position.y = (0 + Math.sin(t / 1.5)) / 2
  })


  // useFrame((state) => {
  //   const t = state.clock.getElapsedTime()
  //   Sphere001.current.rotation.z = -0.2 - (1 + Math.sin(t / 1.5)) / 20
  //   Sphere001.current.rotation.x = Math.cos(t / 4) / 8
  //   Sphere001.current.rotation.y = Math.sin(t / 4) / 2
  //   Sphere001.current.position.y = (1 + Math.sin(t / 1.5)) / 10
  // })


  
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/Frankincents04Anim.glb')
  // const { actions } = useAnimations(animations, group)
  return (
    <group {...props} dispose={null}>

      <group position={[0.15, 0.56, 2.95]} rotation={[1.89, 0.88, -2.05]}>
        <pointLight intensity={2} decay={2} rotation={[-Math.PI / 2, 0, 0]} />
      </group>
      <group position={[-0.13, 2.57, 0.16]} rotation={[1.89, 0.88, -2.05]}>
        <pointLight intensity={0} decay={1} rotation={[-Math.PI / 2, 0, 0]} />
      </group>
      
      <group 
      name="Empty" 
      position={[0.01, -0.64, 0.34]} 
      rotation={[0, 0, 0.1]}
      >
        <mesh
        ref={Ring001}
          geometry={nodes.BezierCircle.geometry}
          material={nodes.BezierCircle.material}
          position={[-0.01, 0.37, -0.34]}
          rotation={[0.39, 0.03, 0.39]}
          scale={[2.1, 1.09, 2.1]}>
          <mesh
          
            name="leftRock"
            geometry={nodes.Sphere001.geometry}
            material={materials.Stones}
            position={[-0.78, 1.08, -0.03]}
            rotation={[0.34, -0.58, 0.35]}
            scale={[0.49, 0.9, 0.5]}
          />
          <mesh
          name='rightRock'
            geometry={nodes.Aset_nature_rock_S_umiledehw_LOD0.geometry}
            material={materials['Material.005']}
            position={[0.96, -0.18, 0.22]}
            rotation={[0.12, 0.55, 0.72]}
            scale={[0.03, 0.03, 0.02]}
          />
          <mesh
          name='backRock'
          
            geometry={nodes.Sphere002.geometry}
            material={nodes.Sphere002.material}
            position={[-0.04, -0.18, -0.78]}
            rotation={[-0.43, 0.14, -0.43]}
            scale={[0.14, 0.21, 0.14]}
          />
          <mesh
          name='frontRock'
            geometry={nodes.Sphere003.geometry}
            material={nodes.Sphere003.material}
            position={[-0.04, -0.18, 1.22]}
            rotation={[-0.43, 0.14, -0.43]}
            scale={[0.14, 0.21, 0.14]}
          />
        </mesh>

      </group>
      <mesh
      
      name='bottomRock'
        geometry={nodes.Cube.geometry}
        material={materials.Material}
        position={[0.14, -3.07, -1.12]}
        rotation={[-0.19, 0, 0]}
        scale={[1.89, 1, 1]}
      />
      
      {/* ref={Sphere001} */}
      <mesh
       ref={Card}
        name="card"
        geometry={nodes.Cube001.geometry}
        material={materials.Frankincents_card}
        position={[0.01, -0.58, 0.34]}
        rotation={[0.28, -0.64, -0.57]}
      />
      <mesh
      material-color='#FF5F09'
      name='frankBakground'
        geometry={nodes.Cylinder.geometry}
        position={[0, 0.36, -3.24]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[3.37, -0.23, 3.37]}
      />
      <mesh
      ref={Cash}
        name="cashCube"
        geometry={nodes.Cube006.geometry}
        material={materials.Cash}
        position={[-1.75, 0.52, -0.06]}
        rotation={[-0.95, -0.66, 1.09]}
      />
      <mesh
      
        name="randomDot"
        geometry={nodes.Sphere.geometry}
        material={materials['Material.002']}
        position={[-1.95, 0.44, 0.18]}
        rotation={[0.86, -0.45, 0.72]}
      />

      <mesh
       material-color='#E3B43F'
      name='ring2'
        geometry={nodes.Cube002.geometry}
        position={[-0.77, -1.61, -3.11]}
        scale={6.89}
      />
      <mesh
       material-color='#E3B43F'
      name='frankLogo1'
        geometry={nodes.Cube003.geometry}
        position={[-0.3, -1.19, -3.11]}
        scale={0.89}
      />
      <mesh
      material-color='#E3B43F'
        geometry={nodes.Cube004.geometry}
        position={[-0.57, 0.64, -3.01]}
        scale={0.89}
      />
      <mesh
      material-color='#E3B43F'
        geometry={nodes.Cube005.geometry}
        position={[0.08, 0.79, -3.11]}
        scale={0.89}
      />
      <mesh

material-color='#E3B43F'
        geometry={nodes.Cube007.geometry}
        position={[-0.49, 1.6, -3.11]}
        scale={0.89}
      />
      <mesh
     material-color='#E3B43F'
        geometry={nodes.Cube008.geometry}
        position={[-0.04, 1.4, -3.11]}
        scale={0.89}
      />
      <mesh
        material-color='#E3B43F'
        geometry={nodes.Cube009.geometry}
        position={[-0.04, 1.19, -3.01]}
        scale={0.89}
      />
    </group>
  )
}

useGLTF.preload('/Frankincents04Anim.glb')
